# -*- coding: utf-8 -*-
"""Safety Analytics BERT approach.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fHyA39KgjbTQVx89nbTOA16ZiwfxXIqb
"""

import pandas as pd
from numpy import dot
from numpy.linalg import norm

import streamlit as st
from sentence_transformers import SentenceTransformer

path_to_csv = "data/IHMStefanini_industrial_safety_and_health_database_with_accidents_description.csv"

accident_dataframe = pd.read_csv(path_to_csv)
#accident_dataframe.rename(columns = {'Unnamed: 0':'index'}, inplace = True)
accident_dataframe.drop(["Unnamed: 0"], axis=1, inplace=True)

model = SentenceTransformer('paraphrase-MiniLM-L6-v2')

BERT_dataframe = pd.read_csv("data/BERT_dataframe.csv")

query = st.text_input('Introduce the search theme', 'Foot injury')
n_results = int(st.text_input('Introduce the number of results displayed', '10'))

query_embedding = model.encode(query).tolist()
distances_dict = {}

for i, row in enumerate(BERT_dataframe.iterrows()):
  comparison_vector = row[1][1:].squeeze().tolist()
  distance = dot(query_embedding, comparison_vector)/(norm(query_embedding)*norm(comparison_vector))
  distances_dict[f"{i}"] = distance

sorted_vals = sorted(distances_dict.values(), reverse=True)
results = []
for n in range(n_results):
  results.append(int(list(distances_dict.keys())[list(distances_dict.values()).index(sorted_vals[n])]))

results_dataframe = accident_dataframe.loc[results]
results_dataframe["Similarity"] = sorted_vals[:n_results]

st.dataframe(results_dataframe)

